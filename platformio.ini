; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

# Automatic targets - enable auto-uploading
# targets = upload


[platformio]
default_envs = esp32azd1

; Wenn auf der cmdline kein Environment angegeben ist, (-e <env> / pio device monitor -e eps32azdev1)
; wird der monitor_speed-Eintrag des ERSTEN!!!! devices verwendet
;
# monitor_speed = 115200

;------------------------------------------------------------------------------
; ESP32 (AZ-Delivery) / 4MB Ram, 320K SRAM
;     ESP32 NodeMCU Module, WLAN, WiFi Development Board mit CP2102
;
; Datenblatt + Pinout:
;     https://cdn.shopify.com/s/files/1/1509/1638/files/ESP_-_32_NodeMCU_Developmentboard_Datenblatt_AZ-Delivery_Vertriebs_GmbH_10f68f6c-a9bb-49c6-a825-07979441739f.pdf?v=1598356497
;
; Board identification:
;     https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/modules-and-boards.html
;
; ESP32-WROOM-32:
;       https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/modules-and-boards.html#esp32-wroom-32
;
[env:esp32azd1]
platform = espressif32
board = nodemcu-32s
framework = arduino
test_ignore = unit_*

monitor_speed = 115200

#upload_port = /dev/cu.SLAB_USBtoUART
#upload_port = 192.168.0.229

#upload_speed = 115200
#upload_speed = 921600
#upload_speed = 460800

build_unflags =
    -std=gnu++11

#build_flags = -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG
build_flags =
    -DBOARD_NODEMCU32S
    -std=c++17
    -std=gnu++17

# platformio lib install ble
lib_deps =
    ArduinoLog
    AsyncTCP
    ble
    ESP Async WebServer
    ESPAsyncTCP
    FauxmoESP
    mathertel/OneButton@0.0.0-alpha+sha.eb583d713a
    OneButton
    crankyoldgit/IRremoteESP8266 @ ^2.8.0

;
; Desktop platforms (Win, Mac, Linux, Raspberry Pi, etc)
; See https://platformio.org/platforms/native
;
[env:native]
platform = native
test_ignore = integration_*

build_unflags =
    -std=gnu++11

; C++17 sollte von Expressive unterstützt werden
;
; Native sollte mehr gehen... (aus Kompatibilitätsgründen wird aber die 17er-Version verwendet)
;    -std=c++2a
;    -std=gnu++2a
build_flags =
    -DNATIVE
    -std=c++17
    -std=gnu++17
